#!/bin/bash -eu
set -o pipefail

baseRepo=git@github.com:getodk/central.git
initialVersion=1.5.3
targetVersion=not-yet-committed
testDir="tmp/$initialVersion-to-$targetVersion"

testPrefix="$(basename "$0")"
log() {
  echo "[$testPrefix] $*"
}

confirm_postgres_version() {
  local expectedVersion="$1"
  local actualVersion="$(docker exec -i central_service_1 node -e "$(cat ./get-postgres-version.js)" 2>/dev/tty)"
  if [[ "$actualVersion" = "$expectedVersion" ]]; then
    log "[confirm_postgres_version] !!! Postgres version confirmed: $expectedVersion"
  else
    log "[confirm_postgres_version] !!!"
    log "[confirm_postgres_version] !!! Incorrect postgres version !!!"
    log "[confirm_postgres_version] !!!   Expected: $expectedVersion"
    log "[confirm_postgres_version] !!!    but got: $actualVersion"
    log "[confirm_postgres_version] !!!"
    exit 1
  fi
}

log "Cleaning up test directory..."
rm -rf "$testDir" || true
mkdir -p "$testDir"

log "Creating test directory..."
cd "$testDir"

log "Cloning odk-central git repo..."
git clone "$baseRepo"
cd central
git checkout "v$initialVersion"
git submodule init

log "Checking for existing containers..." # or are they images?
# I suspect we -have- to maintain the `central` name as per https://github.com/getodk/central/issues/300
if [[ "$(docker-compose ps | tail -n+3 | wc --lines)" != "0" ]]; then
  log
  log "!!! WARN !!! docker-compose HAS ALREADY CREATED IMAGES ON THIS SYSTEM:" # or are they containers?
  docker-compose ps
  log "!!! WARN !!! THESE IMAGES WILL BE DESTROYED!"
  log

  read -n1 -p "Continue (y/n)? " choice
  case "$choice" in
    y|Y) echo "OK, images will be destroyed..." ;; # or are they containers?
    *  ) log "Aborted."; exit 1 ;;
  esac

  log "Cleaning docker-compose..."
  docker-compose down
fi

log "Starting $initialVersion..."
SYSADMIN_EMAIL=no-reply@getodk.org \
        DOMAIN=local \
     HTTP_PORT=18080 \
    HTTPS_PORT=18443 \
  docker-compose up -d

confirm_postgres_version 9.6

log "TODO Seeding database..."
confirm_seed_data
confirm_postgres_version 9.6

log "Upgrading central..."
# see: https://docs.getodk.org/central-upgrade/
git pull
git checkout "$targetVersion"
git submodule update -i

confirm_postgres_version 14
confirm_seed_data
confirm_postgres_version 14

log "Test passed OK!"
